<?xml version="1.0" encoding="utf-8"?>

<package schemaVersion="1.7.28" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="https://raw.githubusercontent.com/Open-CMSIS-Pack/Open-CMSIS-Pack-Spec/v1.7.28/schema/PACK.xsd">
  <vendor>kk</vendor>
  <name>wboot</name>
  <description>A bootloader with streamlined design and small size, suitable for embedded systems with limited resources.</description>
  <url>https://github.com/Aladdin-Wang/wboot/</url>
  <supportContact>https://github.com/Aladdin-Wang/wboot/issues</supportContact>
  <license>LICENSE</license>

  <!-- optional license file -->
  <!-- <license></license> -->

  <repository type="git">https://github.com/Aladdin-Wang/wboot.git</repository>

  <releases>
    <!--automatically generated content, please do not modify -->
    <release version="9.9.9" tag="9.9.9">
      Active development ...
    </release>
    <!-- automatically generated content, please do not modify -->
    <release date="2024-05-05" version="0.9.2" tag="0.9.2" >
      Initial release.
    </release>		
    <release date="2024-04-10" version="0.9.1" tag="0.9.1" >
      Initial release.
    </release>	
    <release date="2024-02-20" version="0.9.0" tag="0.9.0" >
      Initial release.
    </release>			
  </releases>

  <keywords>
    <!-- keywords for indexing -->
    <keyword>framework</keyword>
    <keyword>C Language</keyword>
    <keyword>Data Structures</keyword>
  </keywords>
    <conditions> 
        <condition id="Arm Compiler">
            <description>Arm Compiler 5 (armcc) or Arm Compiler 6 (armclang).</description>
            <accept Tcompiler="ARMCC" Toptions="AC6"/>
            <accept Tcompiler="ARMCC" Toptions="AC6LTO"/>
            <accept Tcompiler="ARMCC" Toptions="AC5"/>
        </condition>
        <condition id="Arm GCC">
            <description>GNU Tools for Arm Embedded Processors.</description>
            <accept Tcompiler="GCC"/>
        </condition>

        
        <condition id="Armv8-M Processors">
            <accept  Dcore="ARMV8MBL"/>
            <accept  Dcore="ARMV8MML"/>
            <accept  Dcore="ARMV81MML"/>
            <accept  Dcore="Star-MC1"/>
            <accept  Dcore="Cortex-M23"/>
            <accept  Dcore="Cortex-M33"/>
            <accept  Dcore="Cortex-M35P"/>
            <accept  Dcore="Cortex-M55"/>
            <accept  Dcore="Cortex-M85"/>
        </condition>

        <condition id="Previous Generation Cortex-M Processors">
            <accept  Dcore="Cortex-M0"/>
            <accept  Dcore="Cortex-M0+"/>
            <accept  Dcore="Cortex-M1"/>
            <accept  Dcore="Cortex-M3"/>
            <accept  Dcore="Cortex-M4"/>
            <accept  Dcore="Cortex-M7"/>
            <accept  Dcore="SC000"/>
            <accept  Dcore="SC300"/>
        </condition>

        <condition id="Cortex-M Processors">
            <description>Support All Cortex-M based processors</description>
            <accept condition="Previous Generation Cortex-M Processors"/>
            <accept condition="Armv8-M Processors"/>
        </condition>

        <condition id="CMSIS-CORE">
            <description>Require CMSIS-CORE Support</description>
            <require Cclass="CMSIS" Cgroup="CORE"/>
        </condition>	 

		<condition id="FlashDrv">
		  <description>wboot flash drive</description>
		</condition> 
		
		<condition id="Bootloader">
		  <description>wboot bootloader</description>
		  <require Cclass="BootServe" Cgroup="wboot" Csub="FlashDrv"/>
		  <require Cclass="BootServe" Cgroup="wboot" Csub="Core"/>		  
		</condition>
		
        <condition id="Cortex-M Arm GCC">
            <description>Compile Cortex-M Processors with GNU Tools for Arm Embedded Processors.</description>
            <require condition="Arm GCC"/>
            <require condition="Cortex-M Processors"/>
        </condition>

        <condition id="Cortex-M Arm Compiler">
            <description>Compile Cortex-M Processors with GNU Tools for Arm Embedded Processors.</description>
            <require condition="Arm Compiler"/>
            <require condition="Cortex-M Processors"/>
        </condition>
        
        <condition id="Previous Generation Cortex-M Arm Compiler">
            <description>Compile Cortex-M Processors with GNU Tools for Arm Embedded Processors.</description>
            <require condition="Arm Compiler"/>
            <require condition="Previous Generation Cortex-M Processors"/>
        </condition>
        
        <condition id="Armv8-M Arm Compiler">
            <description>Compile Cortex-M Processors with GNU Tools for Arm Embedded Processors.</description>
            <require condition="Arm Compiler"/>
            <require condition="Armv8-M Processors"/>
        </condition>
        
        <condition id="Cortex-M Arm GCC CMSIS-CORE">
            <description>Compile Cortex-M Processors with GNU Tools for Arm Embedded Processors.</description>
            <require condition="Arm GCC"/>
            <require condition="Cortex-M Processors"/>
            <require condition="CMSIS-CORE"/>
        </condition>
        <condition id="Cortex-M Arm Compiler CMSIS-CORE">
            <description>Compile Cortex-M Processors with GNU Tools for Arm Embedded Processors.</description>
            <require condition="Arm Compiler"/>
            <require condition="Cortex-M Processors"/>
            <require condition="CMSIS-CORE"/>
        </condition>
        
        <condition id="Previous Generation Cortex-M Arm Compiler CMSIS-CORE">
            <description>Compile Cortex-M Processors with GNU Tools for Arm Embedded Processors.</description>
            <require condition="Arm Compiler"/>
            <require condition="Previous Generation Cortex-M Processors"/>
            <require condition="CMSIS-CORE"/>
        </condition>
        <condition id="Armv8-M Arm Compiler CMSIS-CORE">
            <description>Compile Cortex-M Processors with GNU Tools for Arm Embedded Processors.</description>
            <require condition="Arm Compiler"/>
            <require condition="Armv8-M Processors"/>
            <require condition="CMSIS-CORE"/>
        </condition>
        
    </conditions>  
  <components>
    <!-- signals_slots 组件 -->
    <component Cclass="BootServe" Cversion="0.9.2" Csub="Core" Cgroup="wboot" >
      <description>Contains components such as queue, shell, ymodem, subscribe_publish, signals_slots.</description>
		<files>
			<file category="include" name="source/"/>
			<file category="header" name="template/wl_user_app_cfg.h" attr="config" version="0.9.2"/>
			<file category="source" name="source/wl_serve.c" attr="config" version="0.9.2"/>
			<file category="header" name="source/wl_serve.h" attr="config" version="0.9.2"/>
  
			<file category="sourceC" name="source/generic/queue/wl_queue.c"/>    
			<file category="sourceC" name="source/check_agent_engine/wl_check_agent_engine.c"/>        
			<file category="sourceC" name="source/communication/msg_map/wl_msg_check_arg.c"/>
			<file category="sourceC" name="source/communication/msg_map/wl_msg_check_str.c"/>
			<file category="sourceC" name="source/communication/msg_map/wl_msg_map.c"/>
			<file category="sourceC" name="source/communication/signals_slots/wl_signals_slots.c"/>
			<file category="sourceC" name="source/communication/subscribe_publish/wl_subscribe_publish.c"/>
			<file category="sourceC" name="source/communication/shell/wl_shell.c"/>    
			<file category="sourceC" name="source/communication/ymodem/wl_ymodem.c"/>        
		</files>
		 <Pre_Include_Global_h>
#define __USER_APP_CFG_H__ "wl_user_app_cfg.h"
         </Pre_Include_Global_h>
    </component>
    <component Cclass="BootServe" Cversion="0.9.2" Csub="FlashDrv" Cgroup="wboot" Cvariant="STM32"  condition="FlashDrv">
        <description>wboot flash drive</description>
        <files>
			<file category="sourceC" name="source/flash_blob/wl_flash_blob.c"/>    
			<file category="sourceC" name="source/flash_blob/flash/STM32_FLASH_DEV.c"/>        
			<file category="sourceC" name="source/flash_blob/flash/STM32_FLASH_DRV.c"/> 
        </files>
    </component>
    <component Cclass="BootServe" Cversion="0.9.2" Csub="FlashDrv" Cgroup="wboot" Cvariant="GD32"  condition="FlashDrv">
        <description>wboot flash drive</description>
        <files>
			<file category="sourceC" name="source/flash_blob/wl_flash_blob.c"/>    
			<file category="sourceC" name="source/flash_blob/flash/GD32_FLASH_DEV.c"/>        
			<file category="sourceC" name="source/flash_blob/flash/GD32_FLASH_DRV.c"/> 
        </files>
    </component>	
    <component Cclass="BootServe" Cversion="0.9.2" Csub="Bootloader" Cgroup="wboot" condition="Bootloader">
        <description>wboot bootloader</description>
        <files>
            <file category="sourceC" name="source/bootloader/bootloader.c"/>
        </files>
    </component>	
	
  </components>

  <!-- optional taxonomy section for defining new component Class and Group names -->
  <taxonomy>
    <description Cclass="BootServe" Cgroup="wboot" doc="documents/Doxygen/html/index.html">A bootloader with streamlined design and small size, suitable for embedded systems with limited resources.</description>
  </taxonomy>
</package>

